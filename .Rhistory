#Dans quoi s'expriment-ils le plus?
table(P$typart) #1384 articles de type 4, qui sont des comptes-rendus
#368 articles de type 5, qui sont des articles de fond/reportages
table(P[P$orient=="2",]$typart)
P$ftypart<-factor(P$typart, labels = c("Edit","Inter","LP",
"CR","Fond","LL"))
barplot(table(P$ftypart),
xlab="Type d'article",
ylab="Fréquence",
main=paste(""),
col=rgb(1,0.84,0))
#On fait une base de données qui ne contient que des articles avec des partis suisses comme locuteurs
CH<-D[D$type=="2" & D$pays=="1",]
CH<-CH[!is.na(CH$forient),] #Sans oublier d'enlever les NA
summary(CH$forient) #176 partis de gauche, 35 du centre, 245 de droite
table(CH$typart) #En proportion, beaucoup d'interviews (type 2)
#Et encore beaucoup de comptes-rendus et d'articles de fond
#On enlève la Suisse de la base de données pour faire les analyses de variance
D2<-D[D$pays!="1",]
#Et on refait notre base de données
P2<-D2[D2$type=="2",]
#Boxplot pour le monde, histoire de voir comment s'expriment les partis
boxplot(prop~forient,data=P2,
main=paste(""),
xlab="Affiliation politique",
ylab="Proportion de l'article",
col=c(rgb(1,0,0,1/4),rgb(0,1,0,1/4),rgb(0,0,1,1/4)),
varwidth=T) #Varwidth=T rend les largeurs des boxplots
#proportionnelles à la taille de l'échantillon
#Boxplot pour la Suisse
boxplot(prop~forient,data=CH,
main=paste(""),
xlab="Affiliation politique",
ylab="Proportion de l'article",
col=c(rgb(1,0,0,1/4),rgb(0,1,0,1/4),rgb(0,0,1,1/4)),
varwidth=T)
#On voit déjà une bonne différence par rapport au boxplot avec le monde entier
#Histogramme multiple pour le monde
histomonde <- list(P[P$forient=="Gauche",]$prop,
P[P$forient=="Centre",]$prop,
P[P$forient=="Droite",]$prop)
multhist(histomonde,
col=c(rgb(1,0,0,1/4),rgb(0,1,0,1/4),rgb(0,0,1,1/4)),
ylim=c(0,0.1),
freq=F,
xlab="Proportion de l'article dédiée au locuteur",
ylab="Probabilité de fréquence",
main=paste(""))
legend("topright",
c("Gauche","Centre","Droite"),
pch=15, #Symboles dans la légende
col=c(rgb(1,0,0,1/4),rgb(0,1,0,1/4),rgb(0,0,1,1/4)))
#Histogramme multiple pour la Suisse
histosuisse <- list(CH[CH$forient=="Gauche",]$prop,
CH[CH$forient=="Centre",]$prop,
CH[CH$forient=="Droite",]$prop)
multhist(histosuisse,
col=c(rgb(1,0,0,1/4),rgb(0,1,0,1/4),rgb(0,0,1,1/4)),
ylim=c(0,0.1),
freq=F,
xlab="Proportion de l'article dédiée au locuteur",
ylab="Probabilité de fréquence",
main=paste(""))
legend("topright",
c("Gauche","Centre","Droite"),
pch=15, #Symboles dans la légende
col=c(rgb(1,0,0,1/4),rgb(0,1,0,1/4),rgb(0,0,1,1/4)))
#ANOVA sur les partis dans le monde
#On enlève les partis du centre, on ne s'intéresse qu'aux différences entre
#la gauche et la droite
P3<-P2
P3$forient <- replace(P3$forient,P3$forient=="Centre",NA)
monde <- lm(prop ~ forient, data = P3)
anova(monde)
#La p-valeur n'est pas significative
#ANOVA sur les partis en Suisse
#On enlève les partis du centre, on ne s'intéresse qu'aux différences entre
#la gauche et la droite
CH$forient <- replace(CH$forient,CH$forient=="Centre",NA)
suisse <- lm(prop ~ forient, data = CH)
anova(suisse)
#La p-valeur n'est pas significative
#Maintenant on veut regarder comment la droite Suisse se comporte, comparée
#au reste du monde
Dr<-P[P$forient=="Droite",]
table(Dr$pays)
Dr$pays <- replace(Dr$pays,Dr$pays=="3",2)
Dr$pays <- replace(Dr$pays,Dr$pays=="4",2)
Dr$pays <- as.factor(Dr$pays)
#Histogramme multiple
histodroite <- list(Dr[Dr$pays=="1",]$prop,
Dr[Dr$pays=="2",]$prop)
multhist(histodroite,
col=c(rgb(1,0,0,1/4),rgb(0,0,1,1/4)),
ylim=c(0,0.1),
freq=F,
xlab="Proportion de l'article dédiée au locuteur",
ylab="Probabilité de fréquence",
main=paste(""))
legend("topright",
c("Suisse","Reste du monde"),
pch=15, #Symboles dans la légende
col=c(rgb(1,0,0,1/4),rgb(0,0,1,1/4)))
#ANOVA
droite <- lm(prop ~ pays, data = Dr)
anova(droite)
levels(Dr$pays)<-c("Suisse","USA, GB, France")
#Boxplot pour la droite, histoire de voir comment s'expriment les partis
boxplot(prop ~ pays,data=Dr,
main=paste(""),
xlab="Pays",
ylab="Proportion de l'article",
col=c(rgb(1,0,0,1/4),rgb(0,0,1,1/4)),
varwidth=T) #Varwidth=T rend les largeurs des boxplots
#proportionnelles à la taille de l'échantillon
#Remplacer ces deux lignes par le bon chemin vers 373.rdata
setwd("/Users/astephan/Desktop/Corpus")
load("/Users/astephan/Desktop/Corpus/373.rdata")
#Package pour les stats
library(psych)
#Package pour les jolis graphiques
library(plotrix)
#Moins de chiffres significatifs
options(digits=3)
D <- `03AF0`
`03AF0` <- remove
#On enlève les caractères avec des accents, qui font planter RStudio
nn<-c("pays","journal","enquete","numarti","date","T1","T2",
"type","pouvoir","rang","politique","niveau","typart",
"procontre","event")
names(D)<-nn
#Variable qui dit quelle proportion de l'article est dédiée au locuteur, en pourcentage
D$prop<-D$T1
for (i in 1:6025) {
D$prop[i] <- ((D$T2[i]/D$T1[i])*100)
}
summary(D$prop)
#Variable qui normalise les orientations politiques (1 = gauche, 2 = centre, 3 = droite)
D$orient<-D$politique
#On remplace les 99 par des NA
D$orient <- replace(D$orient,D$orient=="99",NA)
#On normalise pour la Suisse et les partis de gauche
D$orient <- replace(D$orient,D$orient=="105",1) #PSS
D$orient <- replace(D$orient,D$orient=="106",1) #Verts
D$orient <- replace(D$orient,D$orient=="107",1) #La gauche
D$orient <- replace(D$orient,D$orient=="109",1) #Divers gauche
#On normalise pour la Suisse et les partis de droite
D$orient <- replace(D$orient,D$orient=="101",3) #UDC
D$orient <- replace(D$orient,D$orient=="102",3) #PLS
D$orient <- replace(D$orient,D$orient=="103",3) #PRD
D$orient <- replace(D$orient,D$orient=="104",3) #PDC
D$orient <- replace(D$orient,D$orient=="108",3) #La droite
D$orient <- replace(D$orient,D$orient=="110",3) #Divers droite
D$orient <- replace(D$orient,D$orient=="113",3) #Partis nationalistes et/ou extreme droite
#On normalise pour la Suisse et les partis du centre
D$orient <- replace(D$orient,D$orient=="111",2) #Conseil National
D$orient <- replace(D$orient,D$orient=="112",2) #Membres de la classe politique tous bords confondus
#On normalise pour la France et les partis de gauche
D$orient <- replace(D$orient,D$orient=="201",1) #Parti Communiste
D$orient <- replace(D$orient,D$orient=="202",1) #Verts
D$orient <- replace(D$orient,D$orient=="203",1) #Parti Socialiste
D$orient <- replace(D$orient,D$orient=="207",1) #La Gauche
D$orient <- replace(D$orient,D$orient=="209",1) #Divers Gauche
#On normalise pour la France et les partis de droite
D$orient <- replace(D$orient,D$orient=="204",3) #UDF
D$orient <- replace(D$orient,D$orient=="205",3) #RPR
D$orient <- replace(D$orient,D$orient=="206",3) #Front National
D$orient <- replace(D$orient,D$orient=="208",3) #La Droite
D$orient <- replace(D$orient,D$orient=="210",3) #Divers Droite
D$orient <- replace(D$orient,D$orient=="213",3) #Partis nationalistes et/ou extreme droite
#On normalise pour la France et les partis du centre
D$orient <- replace(D$orient,D$orient=="212",2) #Membres de la classe politique tous bords confondus
D$orient <- replace(D$orient,D$orient=="211",2) #Assemblée Nationale
#On normalise pour les Etats-Unis et les partis de gauche
D$orient <- replace(D$orient,D$orient=="301",1) #Parti Démocrate
#On normalise pour les Etats-Unis et les partis de droite
D$orient <- replace(D$orient,D$orient=="302",3) #Parti Républicain
D$orient <- replace(D$orient,D$orient=="304",3) #Reform Party
D$orient <- replace(D$orient,D$orient=="305",3) #Christian Coalition
#On normalise pour les Etats-Unis et les partis du centre
D$orient <- replace(D$orient,D$orient=="303",2) #Le Congrès
#On normalise pour l'Angleterre et les partis de gauche
D$orient <- replace(D$orient,D$orient=="401",1) #Labour
D$orient <- replace(D$orient,D$orient=="404",1) #Green Party
#On normalise pour l'Angleterre et les partis de droite
D$orient <- replace(D$orient,D$orient=="402",3) #Tory
#On normalise pour l'Angleterre et les partis du centre
D$orient <- replace(D$orient,D$orient=="403",2) #Lib-dem
D$orient <- replace(D$orient,D$orient=="405",2) #Parlement
unique(D$orient)
#Il y a des codes inconnus : 2000, 13, 312, 9 et 412. On remplace tout par NA.
D$orient <- replace(D$orient,D$orient=="2000",NA)
D$orient <- replace(D$orient,D$orient=="13",NA)
D$orient <- replace(D$orient,D$orient=="312",NA)
D$orient <- replace(D$orient,D$orient=="9",NA)
D$orient <- replace(D$orient,D$orient=="412",NA)
unique(D$orient) #C'est tout bon, il ne reste plus que 1, 2, 3, et NA.
#Il n'y a que les associations et l'administratif qui s'expriment dans les comptes-rendus
#Mais on garde quand même
table(D$typart[D$type])
#Quelques statistiques descriptives
#1 - Sur les interlocuteurs
table(D$type)
#Les codes 12 et 99 sont inconnus, on met des NA à la place
D$type <- replace(D$type,D$type=="12"|D$type=="99",NA)
D$ftype <- factor(D$type,labels=c("Journ","Parti","Synd",
"Admin","Asso","Egl",
"Exp","Quid","Pers",
"Fir","Other"))
barplot(table(D$ftype),
xlab="Type d'interlocuteur",
ylab="Fréquence",
#main=paste("Fréquence des différents types d'interlocuteurs"),
col=rgb(1,0.84,0))
#2 - Sur les proportions
sum(D$prop<1) #Il y a 143 articles pour lesquels la proportion dédiée au locuteur est <1%
D<-D[D$prop>=1,] #On enlève ces articles, ils ne nous intéressent pas
sum(P$prop==100) #Il y a 107 articles pour lesquels la proportion dédiée au locuteur est 100%
Pipelette<-P[P$prop==100,] #Base de données avec seulement ceux qui ne font
#que parler
table(Pipelette$type)
table(Pipelette$typart)
#En gros, quand le locuteur monopolise la parole, il s'agit d'un commentaire/éditorial
#de la part du journaliste ou bien d'une interview (logique)
#Visualisation des proportions
hist(P$prop,
breaks=100,
col=rgb(1,0.84,0),
prob=T,
main=paste(""),
xlab="Proportion",
ylab="Probabilité de fréquence")
#Ajout d'un density estimate
lines(density(P$prop,adjust=2),
lty="solid",
col=rgb(0,0.39,0),
lwd=2)
#Création de la variable factorielle forient
table(D$orient) #1=Gauche 2=Centre 3=Droite
D$forient<-factor(D$orient,labels = c("Gauche","Centre","Droite"))
summary(D$forient) #786 interlocuteurs de gauche, 138 du centre, 1094 de droite
#On fait une base de données qui ne contient que des articles avec des partis comme locuteurs
P<-D[D$type=="2",]
P<-P[!is.na(P$forient),] #Sans oublier d'enlever les NA
summary(P$forient) #750 partis de gauche, 133 du centre, 1069 de droite
#Dans quoi s'expriment-ils le plus?
table(P$typart) #1384 articles de type 4, qui sont des comptes-rendus
#368 articles de type 5, qui sont des articles de fond/reportages
table(P[P$orient=="2",]$typart)
P$ftypart<-factor(P$typart, labels = c("Edit","Inter","LP",
"CR","Fond","LL"))
barplot(table(P$ftypart),
xlab="Type d'article",
ylab="Fréquence",
main=paste(""),
col=rgb(1,0.84,0))
#On fait une base de données qui ne contient que des articles avec des partis suisses comme locuteurs
CH<-D[D$type=="2" & D$pays=="1",]
CH<-CH[!is.na(CH$forient),] #Sans oublier d'enlever les NA
summary(CH$forient) #176 partis de gauche, 35 du centre, 245 de droite
table(CH$typart) #En proportion, beaucoup d'interviews (type 2)
#Et encore beaucoup de comptes-rendus et d'articles de fond
#On enlève la Suisse de la base de données pour faire les analyses de variance
D2<-D[D$pays!="1",]
#Et on refait notre base de données
P2<-D2[D2$type=="2",]
#Boxplot pour le monde, histoire de voir comment s'expriment les partis
boxplot(prop~forient,data=P2,
main=paste(""),
xlab="Affiliation politique",
ylab="Proportion de l'article",
col=c(rgb(1,0,0,1/4),rgb(0,1,0,1/4),rgb(0,0,1,1/4)),
varwidth=T) #Varwidth=T rend les largeurs des boxplots
#proportionnelles à la taille de l'échantillon
#Boxplot pour la Suisse
boxplot(prop~forient,data=CH,
main=paste(""),
xlab="Affiliation politique",
ylab="Proportion de l'article",
col=c(rgb(1,0,0,1/4),rgb(0,1,0,1/4),rgb(0,0,1,1/4)),
varwidth=T)
#On voit déjà une bonne différence par rapport au boxplot avec le monde entier
#Histogramme multiple pour le monde
histomonde <- list(P[P$forient=="Gauche",]$prop,
P[P$forient=="Centre",]$prop,
P[P$forient=="Droite",]$prop)
multhist(histomonde,
col=c(rgb(1,0,0,1/4),rgb(0,1,0,1/4),rgb(0,0,1,1/4)),
ylim=c(0,0.1),
freq=F,
xlab="Proportion de l'article dédiée au locuteur",
ylab="Probabilité de fréquence",
main=paste(""))
legend("topright",
c("Gauche","Centre","Droite"),
pch=15, #Symboles dans la légende
col=c(rgb(1,0,0,1/4),rgb(0,1,0,1/4),rgb(0,0,1,1/4)))
#Histogramme multiple pour la Suisse
histosuisse <- list(CH[CH$forient=="Gauche",]$prop,
CH[CH$forient=="Centre",]$prop,
CH[CH$forient=="Droite",]$prop)
multhist(histosuisse,
col=c(rgb(1,0,0,1/4),rgb(0,1,0,1/4),rgb(0,0,1,1/4)),
ylim=c(0,0.1),
freq=F,
xlab="Proportion de l'article dédiée au locuteur",
ylab="Probabilité de fréquence",
main=paste(""))
legend("topright",
c("Gauche","Centre","Droite"),
pch=15, #Symboles dans la légende
col=c(rgb(1,0,0,1/4),rgb(0,1,0,1/4),rgb(0,0,1,1/4)))
#ANOVA sur les partis dans le monde
#On enlève les partis du centre, on ne s'intéresse qu'aux différences entre
#la gauche et la droite
P3<-P2
P3$forient <- replace(P3$forient,P3$forient=="Centre",NA)
monde <- lm(prop ~ forient, data = P3)
anova(monde)
#La p-valeur n'est pas significative
#ANOVA sur les partis en Suisse
#On enlève les partis du centre, on ne s'intéresse qu'aux différences entre
#la gauche et la droite
CH$forient <- replace(CH$forient,CH$forient=="Centre",NA)
suisse <- lm(prop ~ forient, data = CH)
anova(suisse)
#La p-valeur n'est pas significative
#Maintenant on veut regarder comment la droite Suisse se comporte, comparée
#au reste du monde
Dr<-P[P$forient=="Droite",]
table(Dr$pays)
Dr$pays <- replace(Dr$pays,Dr$pays=="3",2)
Dr$pays <- replace(Dr$pays,Dr$pays=="4",2)
Dr$pays <- as.factor(Dr$pays)
#Histogramme multiple
histodroite <- list(Dr[Dr$pays=="1",]$prop,
Dr[Dr$pays=="2",]$prop)
multhist(histodroite,
col=c(rgb(1,0,0,1/4),rgb(0,0,1,1/4)),
ylim=c(0,0.1),
freq=F,
xlab="Proportion de l'article dédiée au locuteur",
ylab="Probabilité de fréquence",
main=paste(""))
legend("topright",
c("Suisse","Reste du monde"),
pch=15, #Symboles dans la légende
col=c(rgb(1,0,0,1/4),rgb(0,0,1,1/4)))
#ANOVA
droite <- lm(prop ~ pays, data = Dr)
anova(droite)
levels(Dr$pays)<-c("Suisse","USA, GB, France")
#Boxplot pour la droite, histoire de voir comment s'expriment les partis
boxplot(prop ~ pays,data=Dr,
main=paste(""),
xlab="Pays",
ylab="Proportion de l'article",
col=c(rgb(1,0,0,1/4),rgb(0,0,1,1/4)),
varwidth=T) #Varwidth=T rend les largeurs des boxplots
#proportionnelles à la taille de l'échantillon
setwd("/Users/astephan/Desktop/ER")
library(tidyr)
library(magrittr)
library(stringr)
library(plyr)
library(dplyr)
library(networkD3)
library(reshape2)
options(digits=4)
#freq <- read.csv('ER_Presse-format-ids-clean.csv', header = TRUE, sep = ",")$keywords %>%
freq <- read.csv('ER_Revue_presse-format-ids-clean.csv', header = TRUE, sep = ",")$keywords %>%
str_split(";") %>%
unlist %>%
table %>%
data.frame %>%
arrange(-Freq)
#e <- read.csv('ER_Presse-format-ids-clean.csv', header = TRUE, sep = ",")$keywords %>%
e <- read.csv('ER_Revue_presse-format-ids-clean.csv', header = TRUE, sep = ",")$keywords %>%
str_split(";") %>%
lapply(function(x) {
expand.grid(x, x, w = 1 / length(x), stringsAsFactors = FALSE)
}) %>%
bind_rows
e <- apply(e[, -3], 1, str_sort) %>%
t %>%
data.frame(stringsAsFactors = FALSE) %>%
mutate(w = e$w)
e <- group_by(e, X1, X2) %>%
summarise(w = sum(w)) %>%
filter(X1 != X2)
names(e) <- c("Mot1","Mot2","Poids")
names(freq) <- c("Mot","Frequence")
#Poids relatifs
e$Poids <- e$Poids/max(e$Poids)
write.table(e, file='liens_revue_presse.csv', quote = FALSE, sep=',', col.names = TRUE,
row.names = FALSE)
write.table(freq, file='freq_revue_presse.csv', quote = FALSE, sep=',', col.names = TRUE,
row.names = FALSE)
setwd("/Users/astephan/Desktop/ER")
library(tidyr)
library(magrittr)
library(stringr)
library(plyr)
library(dplyr)
library(networkD3)
library(reshape2)
options(digits=4)
freq <- read.csv('ER_Presse-format-ids-clean.csv', header = TRUE, sep = ",")$keywords %>%
#freq <- read.csv('ER_Revue_presse-format-ids-clean.csv', header = TRUE, sep = ",")$keywords %>%
str_split(";") %>%
unlist %>%
table %>%
data.frame %>%
arrange(-Freq)
e <- read.csv('ER_Presse-format-ids-clean.csv', header = TRUE, sep = ",")$keywords %>%
#e <- read.csv('ER_Revue_presse-format-ids-clean.csv', header = TRUE, sep = ",")$keywords %>%
str_split(";") %>%
lapply(function(x) {
expand.grid(x, x, w = 1 / length(x), stringsAsFactors = FALSE)
}) %>%
bind_rows
e <- apply(e[, -3], 1, str_sort) %>%
t %>%
data.frame(stringsAsFactors = FALSE) %>%
mutate(w = e$w)
e <- group_by(e, X1, X2) %>%
summarise(w = sum(w)) %>%
filter(X1 != X2)
names(e) <- c("Mot1","Mot2","Poids")
names(freq) <- c("Mot","Frequence")
#Poids relatifs
e$Poids <- e$Poids/max(e$Poids)
write.table(e, file='liens_revue_presse.csv', quote = FALSE, sep=',', col.names = TRUE,
row.names = FALSE)
write.table(freq, file='freq_revue_presse.csv', quote = FALSE, sep=',', col.names = TRUE,
row.names = FALSE)
setwd("/Users/astephan/Desktop/ER")
library(tidyr)
library(magrittr)
library(stringr)
library(plyr)
library(dplyr)
library(networkD3)
library(reshape2)
options(digits=4)
#freq <- read.csv('ER_Presse-format-ids-clean.csv', header = TRUE, sep = ",")$keywords %>%
freq <- read.csv('ER_Revue_presse-format-ids-clean.csv', header = TRUE, sep = ",")$keywords %>%
str_split(";") %>%
unlist %>%
table %>%
data.frame %>%
arrange(-Freq)
#e <- read.csv('ER_Presse-format-ids-clean.csv', header = TRUE, sep = ",")$keywords %>%
e <- read.csv('ER_Revue_presse-format-ids-clean.csv', header = TRUE, sep = ",")$keywords %>%
str_split(";") %>%
lapply(function(x) {
expand.grid(x, x, w = 1 / length(x), stringsAsFactors = FALSE)
}) %>%
bind_rows
e <- apply(e[, -3], 1, str_sort) %>%
t %>%
data.frame(stringsAsFactors = FALSE) %>%
mutate(w = e$w)
e <- group_by(e, X1, X2) %>%
summarise(w = sum(w)) %>%
filter(X1 != X2)
names(e) <- c("Mot1","Mot2","Poids")
names(freq) <- c("Mot","Frequence")
#Poids relatifs
e$Poids <- e$Poids/max(e$Poids)
write.table(e, file='liens_revue_presse.csv', quote = FALSE, sep=',', col.names = TRUE,
row.names = FALSE)
write.table(freq, file='freq_revue_presse.csv', quote = FALSE, sep=',', col.names = TRUE,
row.names = FALSE)
setwd("/Users/astephan/Desktop/ER")
library(tidyr)
library(magrittr)
library(stringr)
library(plyr)
library(dplyr)
library(networkD3)
library(reshape2)
options(digits=4)
freq <- read.csv('ER_Presse-format-ids-clean.csv', header = TRUE, sep = ",")$keywords %>%
#freq <- read.csv('ER_Revue_presse-format-ids-clean.csv', header = TRUE, sep = ",")$keywords %>%
str_split(";") %>%
unlist %>%
table %>%
data.frame %>%
arrange(-Freq)
e <- read.csv('ER_Presse-format-ids-clean.csv', header = TRUE, sep = ",")$keywords %>%
#e <- read.csv('ER_Revue_presse-format-ids-clean.csv', header = TRUE, sep = ",")$keywords %>%
str_split(";") %>%
lapply(function(x) {
expand.grid(x, x, w = 1 / length(x), stringsAsFactors = FALSE)
}) %>%
bind_rows
e <- apply(e[, -3], 1, str_sort) %>%
t %>%
data.frame(stringsAsFactors = FALSE) %>%
mutate(w = e$w)
e <- group_by(e, X1, X2) %>%
summarise(w = sum(w)) %>%
filter(X1 != X2)
names(e) <- c("Mot1","Mot2","Poids")
names(freq) <- c("Mot","Frequence")
#Poids relatifs
e$Poids <- e$Poids/max(e$Poids)
write.table(e, file='liens_presse_er.csv', quote = FALSE, sep=',', col.names = TRUE,
row.names = FALSE)
write.table(freq, file='freq_presse_er.csv', quote = FALSE, sep=',', col.names = TRUE,
row.names = FALSE)
